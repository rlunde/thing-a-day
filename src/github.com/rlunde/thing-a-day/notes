
1) Import and Export format

Try using JSON like:

{"category-name":[
  {"id":"guid", "value":"some content"},
  {"value":"some other content"}
]}

If the id is set, an import should do an upsert, otherwise an insert.

2) Should provide for scheduled generation of periodic content

For example, have a tag name that refers to a category, that says to
generate 12 unique new items from a named category, once a day at 11:55pm.

That way, the API doesn't have to generate new content, just get the
cached content, which should be fast and efficient.

-----------

To get started:

There's a "source-me" file two directories up that should set up GOPATH to
include this directory. Run it like:

source source-me 

(Assuming you use bash, of course.)

I think I'll try to get this running on Heroku first. Fortunately, there
are some instructions for how to do that here:

https://revel.github.io/manual/deployment.html

Looks like I'll also need a heroku buildpack for that:

https://github.com/revel/heroku-buildpack-go-revel

To set it up for heroku I did:

$ cd thing-a-day/src/github.com/rlunde/thing-a-day
$ echo "github.com/rlunde/thing-a-day" > .godir
$ heroku create -b https://github.com/revel/heroku-buildpack-go-revel.git
The output of that was:

Creating spooky-coffin-6997... done, stack is cedar-14
Buildpack set. Next release on spooky-coffin-6997 will use https://github.com/revel/heroku-buildpack-go-revel.git.
https://spooky-coffin-6997.herokuapp.com/ | https://git.heroku.com/spooky-coffin-6997.git
Git remote heroku added

Since I did this on Halloween, I was very impressed that Heroku picked "spooky-coffin". Also, github's
contribution grid for today has switched from shades of green to shades of orange and black!

Looks like I should have followed these instructions on Heroku instead?
https://devcenter.heroku.com/articles/getting-started-with-go#introduction
https://devcenter.heroku.com/articles/go-support

Note: the "go get github.com/heroku/go-getting-started/..." is there to create a tutorial project,
so I didn't do it here.

NOTE: I started this project using revel, but have decided to switch to gorilla since it's much
simpler, and start with this example so I can use JWT for auth:

https://github.com/brainattica/golang-jwt-authentication-api-sample

