[ ] start a project in golang / revel
[ ] write instructions for how to install
  [ ] getting the right version of dependencies
  [ ] building it
[ ] write instructions for how to test
[ ] write instructions for how to run
[ ] write deployment instructions
[ ] define a simple schema
  [ ] decide on a default database (postgres?)
[ ] define the APIs
  [ ] add a category of items
    [ ] add an item
    [ ] update an item
    [ ] delete an item
    [ ] list items (paged)
  [ ] set a tag name for a category
    [ ] give it a time range (e.g. once a day, starting at time X UTC)
    [ ] say how many items from the category to choose
  [ ] get items from a category based on a tag
    [ ] if no items cached within the time range (e.g. the last day) generate new ones
[ ] add authorization and authentication (via API keys?)
[ ] set up a batch job to generate items for tags
[ ] should item contents be able to reference another item?
  [ ] think about designing a DSL so item contents are templates that can be filled out
  [ ] refer to the same category:item (e.g. "fruit:1" might refer back to "apple")
